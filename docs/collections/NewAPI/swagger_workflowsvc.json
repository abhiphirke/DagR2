{"swagger":"2.0","info":{"version":"v1","title":"Workflow API","description":"Workflow Commitment API to expose related information and perform relevant Nova operations."},"basePath":"/tieto/collection/workflowsvc","paths":{"/Cases/{caseNo}/workflows":{"get":{"tags":["Cases"],"summary":"Returns all the workflows for a case using Nova case number and it's related debtor.","operationId":"GetAllWorkflowsByCase","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"caseNo","in":"path","description":"Nova case number","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the workflow information","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/WorkflowDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}},"/Cases/{caseNo}/debtors/{debtorNo}/workflows":{"get":{"tags":["Cases"],"summary":"Returns all the workflows for a specific case and debtor using Nova case number .","operationId":"GetAllWorkflowsByCaseDebtor","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"caseNo","in":"path","description":"Nova case number","required":true,"type":"integer","format":"int32"},{"name":"debtorNo","in":"path","description":"Nova debtor number","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the workflow information","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/WorkflowDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}},"/Debtors/{debtorNo}/workflows":{"get":{"tags":["Debtors"],"summary":"Returns all the workflows for a debtor using Nova debtor number.","operationId":"GetAllWorkflowsByDebtor","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"debtorNo","in":"path","description":"Nova debtor number","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the workflow information","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/WorkflowDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}},"/Debtors/{debtorNo}/amortisationplan/{amortisationNo}/workflows":{"get":{"tags":["Debtors"],"summary":"Returns all the workflows for a debtor using Nova debtor number and specific amortisation number.","operationId":"GetAllWorkflowsByDebtorAmort","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"debtorNo","in":"path","description":"Nova debtor number","required":true,"type":"integer","format":"int32"},{"name":"amortisationNo","in":"path","description":"Nova debtor number","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns the workflow information","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/WorkflowDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}}},"definitions":{"WorkflowDTO":{"type":"object","properties":{"position":{"enum":["caseonly","casedebtor","debtoronly","amortisationplan"],"type":"string"},"automatic":{"type":"boolean"},"category":{"enum":["debtcollection","debtsurveillance","amortisation","respite","waiting","debtoronly","creditoronly","partner","surveillance","invoicing","document"],"type":"string"},"status":{"type":"string"},"tree":{"type":"string"},"treeDescription":{"type":"string"},"action":{"type":"string"},"actionDescription":{"type":"string"},"date":{"type":"string"},"type":{"enum":["letter","phone","goto","manual","note","update","export","list","move","change","wait","close","error","jumpto","return","watchdog","templetter","cost","email","history"],"type":"string"},"extendedStatus":{"type":"string"}}}},"securityDefinitions":{"Bearer":{"name":"Authorization","in":"header","type":"apiKey","description":"Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""}},"security":[{"Bearer":[]}]}