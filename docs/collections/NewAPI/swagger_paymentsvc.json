{"swagger":"2.0","info":{"version":"v1","title":"Payment API","description":"Payment Commitment API to expose related information and perform relevant Nova operations."},"basePath":"/tieto/collection/paymentsvc","paths":{"/Cases/cases/{caseNo}/payments":{"get":{"tags":["Cases"],"summary":"Gets the payments based on specified case number","operationId":"GetPaymentsByCaseNo","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"caseNo","in":"path","description":"Case number","required":true,"type":"integer","format":"int32"},{"name":"PageNumber","in":"query","required":false,"type":"integer","format":"int32"},{"name":"PageSize","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request processed successfully","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/BookedPaymentDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}},"/Debtors/debtors/{debtorNo}/payments":{"get":{"tags":["Debtors"],"summary":"Gets the payments based on specified debtor number","operationId":"GetPaymentsByDebtorNo","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"debtorNo","in":"path","description":"Debtor number","required":true,"type":"integer","format":"int32"},{"name":"PageNumber","in":"query","required":false,"type":"integer","format":"int32"},{"name":"PageSize","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Request processed successfully","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/BookedPaymentDTO"}}},"204":{"description":"No records found"},"400":{"description":"Incorrect input parameters"},"401":{"description":"Unauthorized request"},"500":{"description":"The server encountered an error while processing the request"}}}}},"definitions":{"BookedPaymentDTO":{"type":"object","properties":{"id":{"format":"int32","type":"integer"},"sender":{"$ref":"#/definitions/SenderDTO"},"receiver":{"$ref":"#/definitions/ReceiverDTO"},"beneficiary":{"$ref":"#/definitions/ReferenceIdentifierDTO"},"senderAccount":{"$ref":"#/definitions/AccountDTO"},"paymentMethod":{"type":"string"},"currency":{"type":"string"},"receivedAmount":{"format":"double","type":"number"},"bookedAmount":{"format":"double","type":"number"},"paymentDate":{"format":"date-time","type":"string"},"accountingDate":{"format":"date-time","type":"string"},"deductionDate":{"format":"date-time","type":"string"},"registration":{"$ref":"#/definitions/RegistrationDTO"},"description":{"type":"string"},"information":{"type":"string"},"status":{"enum":["booked","deducted"],"type":"string"},"settelment":{"enum":["unplaced","placed","transfered"],"type":"string"},"manual":{"type":"boolean"}}},"SenderDTO":{"type":"object","properties":{"role":{"enum":["unknown","debtor","authority","other"],"type":"string"}}},"ReceiverDTO":{"type":"object","properties":{"role":{"enum":["creditor","solicitor"],"type":"string"}}},"ReferenceIdentifierDTO":{"type":"object","properties":{"id":{"format":"int32","type":"integer"},"specification":{"enum":["case","solicitor","creditor","debtor","pledge","cost","debt","payment","amort","partner","document","collateral","collateralaccount","mandate","collector","lawyer","instance","claim","invoice","creditinvoice","fee","debtorcost","history"],"type":"string"}}},"AccountDTO":{"type":"object","properties":{"accountNo":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/AccountNumberDTO"}},"currency":{"type":"string"},"bankName":{"type":"string"},"bankCode":{"type":"string"}}},"RegistrationDTO":{"type":"object","properties":{"date":{"format":"date-time","type":"string"},"userName":{"type":"string"}}},"AccountNumberDTO":{"type":"object","properties":{"type":{"enum":["unidentified"],"type":"string"},"value":{"type":"string"}}}},"securityDefinitions":{"Bearer":{"name":"Authorization","in":"header","type":"apiKey","description":"Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""}},"security":[{"Bearer":[]}]}